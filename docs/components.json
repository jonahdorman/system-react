{
    "SLDSButton": {
        "description": "SLDS Button component can be used for label buttons, icon buttons, or buttons that have both.",
        "displayName": "SLDSButton",
        "props": {
            "assistiveText": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": "text that is visually hidden but read aloud by screenreaders to tell the user what the icon means.\nIf the button has an icon and a visible label, you can omit the assistiveText prop and use the label prop."
            },
            "buttonSize": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"small\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            },
            "disabled": {
                "type": {
                    "name": "bool"
                },
                "required": false,
                "description": ""
            },
            "hint": {
                "type": {
                    "name": "bool"
                },
                "required": false,
                "description": ""
            },
            "iconName": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            },
            "iconPosition": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"left\"",
                            "computed": false
                        },
                        {
                            "value": "\"right\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            },
            "iconSize": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"x-small\"",
                            "computed": false
                        },
                        {
                            "value": "\"small\"",
                            "computed": false
                        },
                        {
                            "value": "\"medium\"",
                            "computed": false
                        },
                        {
                            "value": "\"large\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            },
            "iconVariant": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"bare\"",
                            "computed": false
                        },
                        {
                            "value": "\"container\"",
                            "computed": false
                        },
                        {
                            "value": "\"border\"",
                            "computed": false
                        },
                        {
                            "value": "\"border-filled\"",
                            "computed": false
                        },
                        {
                            "value": "\"small\"",
                            "computed": false
                        },
                        {
                            "value": "\"more\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": "For icon variants, please reference https://design-system-dev.herokuapp.com/components/buttons#icon."
            },
            "label": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            },
            "onClick": {
                "type": {
                    "name": "func"
                },
                "required": false,
                "description": ""
            },
            "responsive": {
                "type": {
                    "name": "bool"
                },
                "required": false,
                "description": ""
            },
            "tabindex": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            },
            "variant": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"base\"",
                            "computed": false
                        },
                        {
                            "value": "\"neutral\"",
                            "computed": false
                        },
                        {
                            "value": "\"brand\"",
                            "computed": false
                        },
                        {
                            "value": "\"destructive\"",
                            "computed": false
                        },
                        {
                            "value": "\"icon\"",
                            "computed": false
                        },
                        {
                            "value": "\"inverse\"",
                            "computed": false
                        },
                        {
                            "value": "\"icon-inverse\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            }
        }
    },
    "SLDSButton/SLDSButtonStateful": {
        "description": "",
        "displayName": "SLDSButtonStateful",
        "props": {
            "assistiveText": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": "text that is visually hidden but read aloud by screenreaders to tell the user what the icon means.\nIf the button has an icon and a visible label, you can omit the assistiveText prop and use the label prop."
            },
            "disabled": {
                "type": {
                    "name": "bool"
                },
                "required": false,
                "description": ""
            },
            "iconName": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            },
            "iconSize": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            },
            "type": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"join\"",
                            "computed": false
                        },
                        {
                            "value": "\"follow\"",
                            "computed": false
                        },
                        {
                            "value": "\"icon\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": "join - join, member, leave\nfollow - follow, following, unfollow\nicon - \"selected\", \"unselect\", \"not selected\" communicated through background color"
            },
            "variant": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"base\"",
                            "computed": false
                        },
                        {
                            "value": "\"neutral\"",
                            "computed": false
                        },
                        {
                            "value": "\"brand\"",
                            "computed": false
                        },
                        {
                            "value": "\"destructive\"",
                            "computed": false
                        },
                        {
                            "value": "\"icon\"",
                            "computed": false
                        },
                        {
                            "value": "\"inverse\"",
                            "computed": false
                        },
                        {
                            "value": "\"icon-inverse\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            }
        }
    },
    "SLDSButtonGroup": {
        "description": "",
        "displayName": "SLDSButtonGroup",
        "props": {
            "children": {
                "type": {
                    "name": "node"
                },
                "required": true,
                "description": "Children are expected to be SLDSButton components"
            },
            "className": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": ""
            }
        }
    },
    "SLDSIcons/Icon": {
        "description": "The SLDS Icon component should be used for icons only. For icons that are buttons, use the SLDS Button component. <br />\nThe icon color is white by default. Add the class, \"slds-icon-text-default\", to create a text-colored fill color for utility icons. <br />\nFor more details, please reference <a href=\"http://www.lightningdesignsystem.com/components/icons\">Lightening Design System - Icons</a>.",
        "displayName": "Icon",
        "props": {
            "assistiveText": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": "text that is visually hidden but read aloud by screenreaders to tell the user what the icon means.\nNaked icons must have assistive text, however, if you also have visible descriptive text with the icon,\ndeclare this prop as assistiveText=\"\"."
            },
            "category": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"action\"",
                            "computed": false
                        },
                        {
                            "value": "\"custom\"",
                            "computed": false
                        },
                        {
                            "value": "\"doctype\"",
                            "computed": false
                        },
                        {
                            "value": "\"standard\"",
                            "computed": false
                        },
                        {
                            "value": "\"utility\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            },
            "className": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": "css classes that are applied to the svg"
            },
            "name": {
                "type": {
                    "name": "string"
                },
                "required": false,
                "description": "name of the icon. Visit http://www.lightningdesignsystem.com/resources/icons to reference icon names."
            },
            "size": {
                "type": {
                    "name": "enum",
                    "value": [
                        {
                            "value": "\"x-small\"",
                            "computed": false
                        },
                        {
                            "value": "\"small\"",
                            "computed": false
                        },
                        {
                            "value": "\"medium\"",
                            "computed": false
                        },
                        {
                            "value": "\"large\"",
                            "computed": false
                        }
                    ]
                },
                "required": false,
                "description": ""
            }
        }
    }
}